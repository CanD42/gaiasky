<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="compile" basedir="." name="Build and package the GaiaSandbox with libraries in sub-folder">
  <!-- PROPERTIES -->
  <property environment="env"/>

  <property name="version" value="dev"/>
  <property name="lib" value="lib"/>
  <property name="base.dir" value="./"/>
  <property name="gs.dir" value="core"/>
  <property name="gs-android.dir" value="android"/>
  <property name="gs-desktop.dir" value="desktop"/>
  <property name="assets.link" value="${gs-android.dir}/assets"/>
  <property name="debuglevel" value="source,lines,vars"/>
  <property name="target" value="1.7"/>
  <property name="source" value="1.7"/>
  <property name="dist" location="${base.dir}/releases/gaiasandbox-${version}"/>

  <!-- MAIN TARGET -->
  <target name="package" depends="build,package_app"/>
  
  <!-- packages the app into a tgz file -->
  <target name="package_app">
    <delete file="${dist}.tgz"/>
    <tar destfile="${dist}.tgz" basedir="${dist}" compression="gzip"/>
  </target>
  <!-- builds and packages the desktop app -->
  <target name="build" depends="compile, build_info">
    <!-- Prepare output directory -->
    <delete dir="${dist}"/>
    <mkdir dir="${dist}"/>
    
     <!-- Copy libs -->
    <mkdir dir="${dist}/${lib}"/>
    <copy todir="${dist}/${lib}">
    	<fileset dir="${gs.dir}/${lib}">
      		<include name="**/*.jar"/>
    	</fileset>
    </copy>
    <copy todir="${dist}/${lib}">
    	<fileset dir="${gs-desktop.dir}/${lib}">
      		<include name="**/*.jar"/>
    	</fileset>
    </copy>
    
    <!-- Prepare classpath -->
    <path id="build-classpath">
	    <fileset dir="${dist}/${lib}">
	        <include name="*.jar"/>
	    </fileset>
	</path>
	<manifestclasspath property="lib.list" jarfile="${dist}/gaiasandbox.jar">
	    <classpath refid="build-classpath"/>
	</manifestclasspath>
    
    <jar destfile="${dist}/gaiasandbox.jar">
      <manifest>
        <attribute name="Main-Class" value="gaia.cu9.ari.gaiaorbit.GaiaSandboxDesktop"/>
        <attribute name="Class-Path" value="${lib.list}"/>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Application-Name" value="Gaia Sandbox"/>
        <attribute name="Application-Version" value="${version} ${TODAY}"/>
        <attribute name="Application-Vendor" value="ARI - ZAH - Heidelberg UniversitÃ¤t"/>
      </manifest>
      
      <fileset dir="${gs-desktop.dir}/bin">
        <!-- Code -->
        <include name="gaia/**"/>
        <include name="com/**"/>
      </fileset>
      
      <fileset dir="${gs-android.dir}/assets">
        <!-- conf folder -->
        <exclude name="conf/"/>
        <!-- data folder -->
        <exclude name="data/"/>
        <!-- font folder -->
        <include name="font/**"/>
        <!-- icon folder -->
        <include name="icon/**"/>
        <!-- img folder -->
        <include name="img/**"/>
        <!-- shader folder -->
        <include name="shader/**"/>
        <!-- shaders folder -->
        <include name="shaders/**"/>
        <!-- skins folder -->
        <include name="skins/**"/>
      </fileset>
      <fileset dir="${gs.dir}/bin"/>
    </jar>
    
    <!-- Copy conf files -->
    <mkdir dir="${dist}/conf"/>
    <copy todir="${dist}/conf">
      <fileset dir="${gs-android.dir}/assets/conf">
        <exclude name="android/"/>
      </fileset>
    </copy>
    
    <!-- Copy data files -->
    <mkdir dir="${dist}/data"/>
    <copy todir="${dist}/data">
      <fileset dir="${gs-android.dir}/assets/data">
        <exclude name="android/"/>
      </fileset>
    </copy>
    
    <!-- Copy scripts files -->
    <mkdir dir="${dist}/scripts"/>
    <copy todir="${dist}/scripts">
      <fileset dir="${gs-android.dir}/assets/scripts">
			</fileset>
    </copy>
    
    <!-- Copy script, README and LICENSE -->
    <copy todir="${dist}">
      <fileset dir="${gs-desktop.dir}/exe"/>
      <file file="${base.dir}/README.md"/>
    </copy>
    
    <!-- Make run.sh executable -->
    <chmod file="${dist}/run.sh" perm="+x"/>
    
    <!-- Replace version in readme file -->
    <loadfile property="version.contents" srcFile="${gs.dir}/bin/version"/>
    <replace file="${dist}/README.md" token="--------------------------" value="${version.contents}"/>
    
  </target>
  
  <!-- MAIN COMPILE -->
  <target depends="compile_gs, compile_gs_desktop" name="compile"/>
  <!-- COMPILE GS -->
  <target name="compile_gs">
  	  <ant antfile="build.xml" dir="${gs.dir}" target="compile"/>
  </target>
  <!-- COMPILE GS-DESKTOP -->
  <target name="compile_gs_desktop">
      <ant antfile="build.xml" dir="${gs-desktop.dir}" target="compile">
          <property name="gs.dir" value="../${gs.dir}" />
      </ant>
  </target>
  
  <!-- MAIN CLEAN -->
  <target depends="clean_gs, clean_gs_desktop" name="clean"/>
  <!-- CLEAN GS -->
  <target name="clean_gs">
  	  <ant antfile="build.xml" dir="${gs.dir}" target="clean"/>
  </target>
  <!-- CLEAN GS-DESKTOP -->
  <target name="clean_gs_desktop">
      <ant antfile="build.xml" dir="${gs-desktop.dir}" target="clean">
          <property name="gs.dir" value="../${gs.dir}" />
      </ant>
  </target>
  
  <!-- BUILDS THE VERSION FILE WITH THE BUILD INFO -->
  <target name="build_info" depends="git.revision">
    <tstamp>
      <format property="builtat" pattern="dd/MM/yyyy hh:mm aa" timezone="CET"/>
    </tstamp>
    <exec executable="whoami" outputproperty="whoami"/>
    <exec executable="uname" outputproperty="buildsystem">
      <arg value="-a"/>
    </exec>
    <delete file="${gs.dir}/bin/version"/>
    <propertyfile file="${gs.dir}/bin/versionaux">
      <entry key="buildtime" value="${builtat}"/>
      <entry key="build" value="${repository.version}"/>
      <entry key="builder" value="${whoami}"/>
      <entry key="version" value="${version}"/>
      <entry key="system" value="${buildsystem}"/>
    </propertyfile>
    <copy file="${gs.dir}/bin/versionaux" tofile="${gs.dir}/bin/version">
      <filterchain>
        <headfilter skip="1"/>
      </filterchain>
    </copy>
    <delete file="${gs.dir}/bin/versionaux"/>
    <replace file="${gs.dir}/bin/version" token="\" value=""/>
  </target>
  <available file=".git" type="dir" property="git.present"/>
  <target name="git.revision" description="Store git revision in ${repository.version}" if="git.present">
    <exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
      <arg value="describe"/>
      <arg value="--tags"/>
      <arg value="--always"/>
      <arg value="HEAD"/>
    </exec>
    <condition property="repository.version" value="${git.revision}" else="unknown">
      <and>
        <isset property="git.revision"/>
        <length string="${git.revision}" trim="yes" length="0" when="greater"/>
      </and>
    </condition>
    <echo message="revision: ${git.revision}"/>
  </target>
  <target name="run" depends="">
    <java fork="true" classname="gaia.cu9.ari.gaiaorbit.GaiaSandboxDesktop" dir="${gs-desktop.dir}">
      <sysproperty key="properties.file" value="../${gs-android.dir}/assets/conf/global.properties"/>
      <classpath>
        <fileset dir="${gs.dir}/${lib}">  
        	<include name="**/*.jar" />  
        </fileset>  
        <fileset dir="${gs-desktop.dir}/${lib}">  
        	<include name="**/*.jar" />  
        </fileset> 
        <path location="${gs.dir}/bin"/>
        <path location="${gs-desktop.dir}/bin"/>
      </classpath>
    </java>
  </target>
  
  <!-- INIT IVY -->
	<property name="ivy.install.version" value="2.4.0-rc1" />
	  <condition property="ivy.home" value="${env.IVY_HOME}">
	    <isset property="env.IVY_HOME" />
	  </condition>
	<property name="ivy.home" value="${user.home}/.ant" />
	<property name="ivy.jar.dir" value="${ivy.home}/lib" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

	<target name="download-ivy" unless="offline">

	  <mkdir dir="${ivy.jar.dir}"/>
	  <!-- download Ivy from web site so that it can be used even without
	       any special installation -->
	  <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
	       dest="${ivy.jar.file}"
	       usetimestamp="true"/>
	</target>

	<target name="init-ivy"
		depends="download-ivy">
	<!-- try to load ivy here from ivy home, in case the user has not
	     already dropped it into ant's lib dir (note that the latter copy
	     will always take precedence). We will not fail as long as local
	     lib dir exists (it may be empty) and ivy is in at least one of
	     ant's lib dir or the local lib dir. -->
	  <path id="ivy.lib.path">
	    <fileset dir="${ivy.jar.dir}"
		     includes="*.jar"/>

	  </path>
	  <taskdef resource="org/apache/ivy/ant/antlib.xml"
		   uri="antlib:org.apache.ivy.ant"
		   classpathref="ivy.lib.path"/>
	</target>
</project>
